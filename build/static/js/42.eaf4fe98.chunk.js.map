{"version":3,"sources":["components/clients/common/Loading/index.jsx","../node_modules/webpack/buildin/module.js","containers/admin/Users/AddUser/index.jsx"],"names":["LoadingContainer","props","className","color","style","width","height","module","exports","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","get","l","i","statusOptions","value","label","roleOptions","AddUser","history","useHistory","dispatch","useDispatch","useSelector","state","users","isCreatedUser","error","loading","validationSchema","yup","email","required","password","phone","firstName","lastName","formik","useFormik","initialValues","status","role","onSubmit","values","a","console","log","createUserApi","useEffect","resetData","toast","success","resetForm","goBack","handleSubmit","method","md","type","name","onChange","handleChange","errors","touched","map","el","onClick"],"mappings":"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","file":"static/js/42.eaf4fe98.chunk.js","sourcesContent":["import React from \"react\";\nimport './index.scss'\n\nimport { CSpinner } from \"@coreui/react\";\n\nconst LoadingContainer = (props) => {\n  return (\n    <div className=\"loadingContainer\">\n      <CSpinner color=\"primary\" style={{ width: \"4rem\", height: \"4rem\" }} />\n    </div>\n  );\n};\n\nexport default LoadingContainer;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import React, { useEffect } from \"react\";\nimport \"./index.scss\";\nimport * as yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router-dom\";\n\n// actions\nimport {\n  createUserApi,\n  resetData,\n} from \"../../../../stores/reducers/userSlice\";\n\nimport {\n  CForm,\n  CFormGroup,\n  CFormText,\n  CLabel,\n  CInput,\n  CCard,\n  CCardHeader,\n  CCardBody,\n  CRow,\n  CCol,\n  CButton,\n  CSelect,\n} from \"@coreui/react\";\n\n// components\nimport LoadingContainer from \"../../../../components/clients/common/Loading\";\n\nconst statusOptions = [\n  {\n    value: \"inactive\",\n    label: \"Inactive\",\n  },\n  {\n    value: \"active\",\n    label: \"Active\",\n  },\n  {\n    value: \"blocked\",\n    label: \"Blocked\",\n  },\n];\n\nconst roleOptions = [\n  {\n    value: \"admin\",\n    label: \"Admin\",\n  },\n  {\n    value: \"investor\",\n    label: \"Investor\",\n  },\n];\n\nconst AddUser = (props) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { isCreatedUser, error, loading } = useSelector((state) => state.users);\n\n  const validationSchema = yup.object({\n    email: yup\n      .string(\"Enter your email\")\n      .email(\"Email invalid\")\n      .required(\"Email is required\"),\n    password: yup\n      .string(\"Enter your password\")\n      .required(\"Password is required\"),\n    phone: yup.string(),\n    firstName: yup.string(),\n    lastName: yup.string(),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n      phone: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      status: statusOptions[0].value,\n      role: roleOptions[1].value,\n    },\n    validationSchema,\n    onSubmit: async (values) => {\n      console.log(\"values: \", values);\n      await dispatch(createUserApi(values));\n    },\n  });\n\n  useEffect(() => {\n    return () => {\n      dispatch(resetData());\n    };\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (isCreatedUser) {\n      toast.success(\"Created user successfully\");\n      formik.resetForm();\n      dispatch(resetData());\n      history.goBack();\n    }\n    return () => {\n      dispatch(resetData());\n    };\n  }, [isCreatedUser, dispatch, formik, history]);\n\n  useEffect(() => {\n    if (error) {\n      toast.error(\"Created user failed\");\n      dispatch(resetData());\n    }\n    return () => {\n      dispatch(resetData());\n    };\n  }, [dispatch, error]);\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  return (\n    <div className=\"addUser\">\n      <CForm onSubmit={formik.handleSubmit} method=\"post\">\n        {loading ? (\n          <LoadingContainer />\n        ) : (\n          <CCard>\n            <CCardHeader>Add User</CCardHeader>\n            <CCardBody>\n              <CRow>\n                <CCol md={6}>\n                  <CFormGroup>\n                    <CLabel>Email</CLabel>\n                    <CInput\n                      type=\"emai\"\n                      name=\"email\"\n                      value={formik.values.email}\n                      onChange={formik.handleChange}\n                    />\n                    {formik.errors.email && formik.touched.email && (\n                      <CFormText className=\"help-block textError\">\n                        {formik.errors.email}\n                      </CFormText>\n                    )}\n                  </CFormGroup>\n                </CCol>\n\n                <CCol md={6}>\n                  <CFormGroup>\n                    <CLabel>Password</CLabel>\n                    <CInput\n                      type=\"text\"\n                      name=\"password\"\n                      value={formik.values.password}\n                      onChange={formik.handleChange}\n                    />\n                    {formik.errors.password && formik.touched.password && (\n                      <CFormText className=\"help-block textError\">\n                        {formik.errors.password}\n                      </CFormText>\n                    )}\n                  </CFormGroup>\n                </CCol>\n\n                <CCol md={6}>\n                  <CFormGroup>\n                    <CLabel>First Name</CLabel>\n                    <CInput\n                      type=\"text\"\n                      name=\"firstName\"\n                      value={formik.values.firstName}\n                      onChange={formik.handleChange}\n                    />\n                  </CFormGroup>\n                </CCol>\n\n                <CCol md={6}>\n                  <CFormGroup>\n                    <CLabel>Last Name</CLabel>\n                    <CInput\n                      type=\"text\"\n                      name=\"lastName\"\n                      value={formik.values.lastName}\n                      onChange={formik.handleChange}\n                    />\n                  </CFormGroup>\n                </CCol>\n\n                <CCol md={6}>\n                  <CFormGroup>\n                    <CLabel>Phone</CLabel>\n                    <CInput\n                      type=\"text\"\n                      name=\"phone\"\n                      value={formik.values.phone}\n                      onChange={formik.handleChange}\n                    />\n                  </CFormGroup>\n                </CCol>\n\n                <CCol md={6}>\n                  <CFormGroup>\n                    <CLabel>Status</CLabel>\n                    <CSelect\n                      name=\"status\"\n                      value={formik.values.status}\n                      onChange={formik.handleChange}\n                    >\n                      {statusOptions.map((el, i) => (\n                        <option key={i} value={el.value}>\n                          {el.label}\n                        </option>\n                      ))}\n                    </CSelect>\n                  </CFormGroup>\n                </CCol>\n\n                <CCol md={6}>\n                  <CFormGroup>\n                    <CLabel>Role</CLabel>\n                    <CSelect\n                      name=\"role\"\n                      value={formik.values.role}\n                      onChange={formik.handleChange}\n                    >\n                      {roleOptions.map((el, i) => (\n                        <option key={i} value={el.value}>\n                          {el.label}\n                        </option>\n                      ))}\n                    </CSelect>\n                  </CFormGroup>\n                </CCol>\n\n                <CCol md={12}>\n                  <div className=\"actions\">\n                    <CButton color=\"danger\" onClick={handleBack}>\n                      Back\n                    </CButton>\n                    <CButton type=\"submit\" color=\"success\">\n                      Add\n                    </CButton>\n                  </div>\n                </CCol>\n              </CRow>\n            </CCardBody>\n          </CCard>\n        )}\n      </CForm>\n    </div>\n  );\n};\n\nexport default AddUser;\n"],"sourceRoot":""}