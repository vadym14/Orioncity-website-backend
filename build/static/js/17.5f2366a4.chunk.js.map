{"version":3,"sources":["components/clients/Dashboard/CardItem/index.jsx","components/clients/common/Chartjs/Apexcharts/index.jsx","components/clients/Dashboard/InfoChart/index.jsx","components/clients/Dashboard/index.jsx","containers/clients/Dashboard/index.jsx","assets/images/img2.webp"],"names":["CardItem","image","title","className","md","src","alt","style","width","PieApexcharts","options","series","id","margin","type","InfoChart","total","refChart","useRef","useState","widthBox","setWidthBox","useEffect","current","_width","offsetWidth","myRef","setWidth","height","setHeight","handleResize","offsetHeight","window","addEventListener","removeEventListener","useResize","ref","numberWithCommas","x","toString","pattern","test","replace","dataChart1","chart","colors","labels","plotOptions","pie","dataLabels","offset","formatter","val","opts","w","globals","seriesIndex","textAlign","fontSize","legend","show","responsive","breakpoint","position","dataChart2","dropShadow","enabled","top","left","blur","opacity","DashboardContent","props","history","useHistory","localStorage","getItem","push","results","i","Img1","renderItems","lg","DashboardPage"],"mappings":"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","file":"static/js/17.5f2366a4.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./index.scss\";\nimport PropTypes from \"prop-types\";\n\n// ui\nimport { CRow, CCol } from \"@coreui/react\";\n\nconst CardItem = ({ image, title }) => {\n  return (\n    <div className=\"cardItem\">\n      <CRow>\n        <CCol md={6}>\n          <img src={image} alt=\"\" style={{ width: \"100%\" }} />\n        </CCol>\n        <CCol md={6}>\n          <div className=\"title\">\n            <h3>{title}</h3>\n          </div>\n        </CCol>\n      </CRow>\n\n      <div className=\"description\">\n        <p className=\"textLeft\">Investment date:</p>\n        <p className=\"textRight\">Nov 19 2019</p>\n      </div>\n\n      <div className=\"description\">\n        <p className=\"textLeft\">Investment Amount:</p>\n        <p className=\"textRight\">$ 90,000</p>\n      </div>\n\n      <div className=\"description\">\n        <p className=\"textLeft\">Estimated Return:</p>\n        <p className=\"textRight\">$ 226,800</p>\n      </div>\n\n      <div className=\"description\">\n        <p className=\"textLeft\">Estimated Total ROI:</p>\n        <p className=\"textRight\">152%</p>\n      </div>\n\n      <div className=\"description\">\n        <p className=\"textLeft\">Estimated Anual ROI:</p>\n        <p className=\"textRight\">87%</p>\n      </div>\n    </div>\n  );\n};\n\nCardItem.propTypes = {\n  image: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nexport default CardItem;\n","import React from \"react\";\nimport \"./index.scss\";\n\nimport ReactApexChart from \"react-apexcharts\";\n\nconst PieApexcharts = ({ options, series, width }) => {\n  return (\n    <div id=\"chart\" style={{ margin: \"15px 0\" }}>\n      <ReactApexChart\n        options={options}\n        series={series}\n        type=\"pie\"\n        width={width}\n      />\n    </div>\n  );\n};\n\nexport default PieApexcharts;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport \"./index.scss\";\nimport PropTypes from \"prop-types\";\n\nimport PieApexcharts from \"../../common/Chartjs/Apexcharts\";\n\nconst useResize = (myRef) => {\n  const [width, setWidth] = useState(0);\n  const [height, setHeight] = useState(0);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWidth(myRef.current.offsetWidth);\n      setHeight(myRef.current.offsetHeight);\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, [myRef]);\n\n  return { width, height };\n};\n\nconst InfoChart = ({ title, total, options, series }) => {\n  const refChart = useRef(null);\n\n  const [widthBox, setWidthBox] = useState(0);\n\n  useEffect(() => {\n    if (refChart.current) {\n      const _width = refChart.current.offsetWidth;\n      setWidthBox(_width);\n    }\n  }, [refChart]);\n\n  const { width } = useResize(refChart);\n\n  return (\n    <div className=\"infoChart\">\n      <h2>{title}</h2>\n\n      <div className=\"viewChart\" ref={refChart}>\n        {widthBox && (\n          <PieApexcharts\n            title={title}\n            width={width === 0 ? widthBox : width}\n            options={options}\n            series={series}\n          />\n        )}\n      </div>\n\n      <h4>Total: {total}</h4>\n    </div>\n  );\n};\n\nInfoChart.propTypes = {\n  title: PropTypes.string,\n  total: PropTypes.string,\n};\n\nexport default InfoChart;\n","import React, { useEffect } from \"react\";\nimport \"./index.scss\";\nimport { useHistory } from \"react-router-dom\";\n\n// ui\nimport { CContainer, CRow, CCol } from \"@coreui/react\";\n\n// components\nimport CardItem from \"./CardItem\";\nimport InfoChart from \"./InfoChart\";\n\n// images\nimport Img1 from \"../../../assets/images/img2.webp\";\n\nconst numberWithCommas = (x) => {\n  x = x.toString();\n  var pattern = /(-?\\d+)(\\d{3})/;\n  while (pattern.test(x)) x = x.replace(pattern, \"$1,$2\");\n  return x;\n};\n\nconst dataChart1 = {\n  series: [50000.0, 90000.0, 70000.0, 92400.0],\n  options: {\n    chart: {\n      // width: props.width,\n      type: \"pie\",\n    },\n    colors: [\"#f17522\", \"#9c9c9c\", \"#f7c028\", \"#15a5e7\"],\n    labels: [\n      \"2649 Waverly Dr\",\n      \"2925 Waverly Dr\",\n      \"Lyric 139\",\n      \"2916 Waverly Dr\",\n    ],\n    plotOptions: {\n      pie: {\n        dataLabels: {\n          offset: -22,\n        },\n      },\n    },\n    dataLabels: {\n      formatter(val, opts) {\n        const name = opts.w.globals.labels[opts.seriesIndex];\n        const value = `$${numberWithCommas(\n          dataChart1.series[opts.seriesIndex]\n        )}`;\n        return [name, value];\n      },\n      style: {\n        textAlign: \"center\",\n        fontSize: \"13px\",\n      },\n    },\n    legend: {\n      show: false,\n    },\n    responsive: [\n      {\n        breakpoint: 480,\n        options: {\n          // chart: {\n          //   width: 200,\n          // },\n          legend: {\n            position: \"center\",\n          },\n        },\n      },\n    ],\n  },\n};\n\nconst dataChart2 = {\n  series: [188000.0, 226800.0, 239400.0, 275352.0],\n  options: {\n    chart: {\n      // width: props.width,\n      type: \"pie\",\n    },\n    colors: [\"#f17522\", \"#9c9c9c\", \"#f7c028\", \"#15a5e7\"],\n    labels: [\n      \"2649 Waverly Dr\",\n      \"2925 Waverly Dr\",\n      \"Lyric 139\",\n      \"2916 Waverly Dr\",\n    ],\n    plotOptions: {\n      pie: {\n        dataLabels: {\n          offset: -22,\n        },\n      },\n    },\n    dropShadow: {\n      enabled: true,\n      top: 0,\n      left: 0,\n      blur: 3,\n      opacity: 0.5,\n    },\n    dataLabels: {\n      formatter(val, opts) {\n        const name = opts.w.globals.labels[opts.seriesIndex];\n        const value = `$${numberWithCommas(\n          dataChart2.series[opts.seriesIndex]\n        )}`;\n        return [name, value];\n      },\n      style: {\n        textAlign: \"center\",\n        fontSize: \"13px\",\n      },\n    },\n    legend: {\n      show: false,\n    },\n    responsive: [\n      {\n        breakpoint: 480,\n        options: {\n          // chart: {\n          //   width: 200,\n          // },\n          legend: {\n            position: \"center\",\n          },\n        },\n      },\n    ],\n  },\n};\n\nconst DashboardContent = (props) => {\n  const history = useHistory();\n\n  useEffect(() => {\n    const checkLogin = localStorage.getItem(\"isLogin\");\n    if (!checkLogin) {\n      history.push(\"/login\");\n    }\n  }, [history]);\n\n  const renderItems = () => {\n    const results = [];\n    for (let i = 0; i < 4; i++) {\n      results.push(\n        <CCol md={6} key={i}>\n          <CardItem image={Img1} title=\"2925 Waverly Dr.\" />\n        </CCol>\n      );\n    }\n\n    return results;\n  };\n\n  return (\n    <div className=\"dashboardContent\">\n      <CContainer>\n        <h2>Personal Investments</h2>\n\n        <CRow>{renderItems()}</CRow>\n\n        <CRow>\n          <CCol lg={6}>\n            <InfoChart\n              title=\"Investment Distribution\"\n              total=\"$302,400\"\n              options={dataChart1.options}\n              series={dataChart1.series}\n            />\n          </CCol>\n          <CCol lg={6}>\n            <InfoChart\n              title=\"Expected Return\"\n              total=\"$929,552\"\n              options={dataChart2.options}\n              series={dataChart2.series}\n            />\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  );\n};\n\nexport default DashboardContent;\n","import React from \"react\";\nimport \"./index.scss\";\n\nimport DashboardContent from \"../../../components/clients/Dashboard\";\n\nconst DashboardPage = (props) => {\n  return (\n    <div className=\"dashboadClient\">\n      <DashboardContent />\n    </div>\n  );\n};\n\nexport default DashboardPage;\n","export default __webpack_public_path__ + \"static/media/img2.a4fcfb00.webp\";"],"sourceRoot":""}