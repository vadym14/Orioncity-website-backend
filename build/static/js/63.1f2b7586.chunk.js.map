{"version":3,"sources":["views/widgets/WidgetsDropdown.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","views/charts/ChartLineSimple.js","views/charts/ChartBarSimple.js"],"names":["WidgetsDropdown","sm","lg","color","header","text","footerSlot","pointed","className","style","height","dataPoints","pointHoverBackgroundColor","label","labels","name","placement","disabled","options","elements","line","tension","caret","backgroundColor","borderWidth","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","ChartLineSimple","props","borderColor","attributes","pointHoverColor","defaultDatasets","data","getColor","pointBackgroundColor","pointedOptions","scales","xAxes","offset","gridLines","zeroLineColor","ticks","fontSize","fontColor","yAxes","display","min","Math","apply","max","point","radius","hitRadius","hoverRadius","straightOptions","defaultOptions","assign","maintainAspectRatio","legend","computedDatasets","deepObjectsMerge","datasets","computedOptions","defaultProps","ChartBarSimple","barPercentage","categoryPercentage"],"mappings":"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","file":"static/js/63.1f2b7586.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  CWidgetDropdown,\n  CRow,\n  CCol,\n  CDropdown,\n  CDropdownMenu,\n  CDropdownItem,\n  CDropdownToggle\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport ChartLineSimple from '../charts/ChartLineSimple'\nimport ChartBarSimple from '../charts/ChartBarSimple'\n\nconst WidgetsDropdown = () => {\n  // render\n  return (\n    <CRow>\n      <CCol sm=\"6\" lg=\"3\">\n        <CWidgetDropdown\n          color=\"gradient-primary\"\n          header=\"9.823\"\n          text=\"Members online\"\n          footerSlot={\n            <ChartLineSimple\n              pointed\n              className=\"c-chart-wrapper mt-3 mx-3\"\n              style={{height: '70px'}}\n              dataPoints={[65, 59, 84, 84, 51, 55, 40]}\n              pointHoverBackgroundColor=\"primary\"\n              label=\"Members\"\n              labels=\"months\"\n            />\n          }\n        >\n          <CDropdown>\n            <CDropdownToggle color=\"transparent\">\n              <CIcon name=\"cil-settings\"/>\n            </CDropdownToggle>\n            <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n              <CDropdownItem>Action</CDropdownItem>\n              <CDropdownItem>Another action</CDropdownItem>\n              <CDropdownItem>Something else here...</CDropdownItem>\n              <CDropdownItem disabled>Disabled action</CDropdownItem>\n            </CDropdownMenu>\n          </CDropdown>\n        </CWidgetDropdown>\n      </CCol>\n\n      <CCol sm=\"6\" lg=\"3\">\n        <CWidgetDropdown\n          color=\"gradient-info\"\n          header=\"9.823\"\n          text=\"Members online\"\n          footerSlot={\n            <ChartLineSimple\n              pointed\n              className=\"mt-3 mx-3\"\n              style={{height: '70px'}}\n              dataPoints={[1, 18, 9, 17, 34, 22, 11]}\n              pointHoverBackgroundColor=\"info\"\n              options={{ elements: { line: { tension: 0.00001 }}}}\n              label=\"Members\"\n              labels=\"months\"\n            />\n          }\n        >\n          <CDropdown>\n            <CDropdownToggle caret={false} color=\"transparent\">\n              <CIcon name=\"cil-location-pin\"/>\n            </CDropdownToggle>\n            <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n              <CDropdownItem>Action</CDropdownItem>\n              <CDropdownItem>Another action</CDropdownItem>\n              <CDropdownItem>Something else here...</CDropdownItem>\n              <CDropdownItem disabled>Disabled action</CDropdownItem>\n            </CDropdownMenu>\n          </CDropdown>\n        </CWidgetDropdown>\n      </CCol>\n\n      <CCol sm=\"6\" lg=\"3\">\n        <CWidgetDropdown\n          color=\"gradient-warning\"\n          header=\"9.823\"\n          text=\"Members online\"\n          footerSlot={\n            <ChartLineSimple\n              className=\"mt-3\"\n              style={{height: '70px'}}\n              backgroundColor=\"rgba(255,255,255,.2)\"\n              dataPoints={[78, 81, 80, 45, 34, 12, 40]}\n              options={{ elements: { line: { borderWidth: 2.5 }}}}\n              pointHoverBackgroundColor=\"warning\"\n              label=\"Members\"\n              labels=\"months\"\n            />\n          }\n        >\n          <CDropdown>\n            <CDropdownToggle color=\"transparent\">\n              <CIcon name=\"cil-settings\"/>\n            </CDropdownToggle>\n            <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n              <CDropdownItem>Action</CDropdownItem>\n              <CDropdownItem>Another action</CDropdownItem>\n              <CDropdownItem>Something else here...</CDropdownItem>\n              <CDropdownItem disabled>Disabled action</CDropdownItem>\n            </CDropdownMenu>\n          </CDropdown>\n        </CWidgetDropdown>\n      </CCol>\n\n      <CCol sm=\"6\" lg=\"3\">\n        <CWidgetDropdown\n          color=\"gradient-danger\"\n          header=\"9.823\"\n          text=\"Members online\"\n          footerSlot={\n            <ChartBarSimple\n              className=\"mt-3 mx-3\"\n              style={{height: '70px'}}\n              backgroundColor=\"rgb(250, 152, 152)\"\n              label=\"Members\"\n              labels=\"months\"\n            />\n          }\n        >\n          <CDropdown>\n            <CDropdownToggle caret className=\"text-white\" color=\"transparent\">\n              <CIcon name=\"cil-settings\"/>\n            </CDropdownToggle>\n            <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n              <CDropdownItem>Action</CDropdownItem>\n              <CDropdownItem>Another action</CDropdownItem>\n              <CDropdownItem>Something else here...</CDropdownItem>\n              <CDropdownItem disabled>Disabled action</CDropdownItem>\n            </CDropdownMenu>\n          </CDropdown>\n        </CWidgetDropdown>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { getColor, deepObjectsMerge } from '@coreui/utils'\nimport { CChartLine } from '@coreui/react-chartjs'\n\nconst ChartLineSimple = props => {\n\n  const {\n    borderColor,\n    backgroundColor,\n    pointHoverBackgroundColor,\n    dataPoints,\n    label,\n    pointed,\n    ...attributes\n  } = props\n\n  const pointHoverColor = (()=>{\n    if (pointHoverBackgroundColor) {\n      return pointHoverBackgroundColor\n    } else if (backgroundColor !== 'transparent') {\n      return backgroundColor\n    }\n    return borderColor\n  })()\n\n  const defaultDatasets = (()=>{\n    return [\n      {\n        data: dataPoints,\n        borderColor: getColor(borderColor),\n        backgroundColor: getColor(backgroundColor),\n        pointBackgroundColor: getColor(pointHoverColor),\n        pointHoverBackgroundColor: getColor(pointHoverColor),\n        label\n      }\n    ]\n  })()\n\n  const pointedOptions = (()=>{\n    return {\n      scales: {\n        xAxes: [\n          {\n            offset: true,\n            gridLines: {\n              color: 'transparent',\n              zeroLineColor: 'transparent'\n            },\n            ticks: {\n              fontSize: 2,\n              fontColor: 'transparent'\n            }\n          }\n        ],\n        yAxes: [\n          {\n            display: false,\n            ticks: {\n              display: false,\n              min: Math.min.apply(Math, dataPoints) - 5,\n              max: Math.max.apply(Math, dataPoints) + 5\n            }\n          }\n        ]\n      },\n      elements: {\n        line: {\n          borderWidth: 1\n        },\n        point: {\n          radius: 4,\n          hitRadius: 10,\n          hoverRadius: 4\n        }\n      }\n    }\n  })()\n\n  const straightOptions = (()=>{\n    return {\n      scales: {\n        xAxes: [{\n          display: false\n        }],\n        yAxes: [{\n          display: false\n        }]\n      },\n      elements: {\n        line: {\n          borderWidth: 2\n        },\n        point: {\n          radius: 0,\n          hitRadius: 10,\n          hoverRadius: 4\n        }\n      }\n    }\n  })()\n\n  const defaultOptions = (()=>{\n    const options = pointed ? pointedOptions : straightOptions\n      return Object.assign({}, options, {\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        }\n      })\n  })()\n\n  const computedDatasets = (() => {\n    return deepObjectsMerge(defaultDatasets, attributes.datasets || {})\n  })()\n\n  const computedOptions = (() => {\n    return deepObjectsMerge(defaultOptions, attributes.options || {})\n  })()\n\n  // render\n\n  return (\n    <CChartLine\n      {...attributes}\n      datasets={computedDatasets}\n      options={computedOptions}\n      labels={label}\n    />\n  )\n}\n\nChartLineSimple.propTypes = {\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  //\n  borderColor: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  pointHoverBackgroundColor: PropTypes.string,\n  dataPoints: PropTypes.array,\n  label: PropTypes.string,\n  pointed: PropTypes.bool\n};\n\nChartLineSimple.defaultProps = {\n  borderColor: 'rgba(255,255,255,.55)',\n  backgroundColor: 'transparent',\n  dataPoints: [10, 22, 34, 46, 58, 70, 46, 23, 45, 78, 34, 12],\n  label: 'Sales'\n};\n\nexport default ChartLineSimple\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { getColor } from '@coreui/utils'\nimport { CChartBar } from '@coreui/react-chartjs'\n\nconst ChartBarSimple = props => {\n\n  const {\n    backgroundColor,\n    pointHoverBackgroundColor,\n    dataPoints,\n    label,\n    pointed,\n    ...attributes\n  } = props\n\n  const defaultDatasets = (()=>{\n    return [\n      {\n        data: dataPoints,\n        backgroundColor: getColor(backgroundColor),\n        pointHoverBackgroundColor: getColor(pointHoverBackgroundColor),\n        label: label,\n        barPercentage: 0.5,\n        categoryPercentage: 1\n      }\n    ]\n  })()\n\n  const defaultOptions = (()=>{\n    return {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      scales: {\n        xAxes: [{\n          display: false\n        }],\n        yAxes: [{\n          display: false\n        }]\n      }\n    }\n  })()\n\n  // render\n  return (\n    <CChartBar\n      {...attributes}\n      datasets={defaultDatasets}\n      options={defaultOptions}\n      labels={label}\n    />\n  )\n}\n\nChartBarSimple.propTypes = {\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  //\n  backgroundColor: PropTypes.string,\n  pointHoverBackgroundColor: PropTypes.string,\n  dataPoints: PropTypes.array,\n  label: PropTypes.string,\n  pointed: PropTypes.bool\n};\n\nChartBarSimple.defaultProps = {\n  backgroundColor: 'rgba(0,0,0,.2)',\n  dataPoints: [10, 22, 34, 46, 58, 70, 46, 23, 45, 78, 34, 12],\n  label: 'Sales'\n};\n\nexport default ChartBarSimple\n"],"sourceRoot":""}