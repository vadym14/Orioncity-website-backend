{"version":3,"sources":["views/editors/code-editors/_examples.js","views/editors/code-editors/CodeEditors.js","reusable/DocsLink.js","reusable/ProBadge.js"],"names":["sampleCode","markdown","javascript","xml","CodeEditors","darkMode","useSelector","state","React","useState","content","setContent","options","lineNumbers","mode","theme","autofocus","scrollbarStyle","href","value","onBeforeChange","editor","data","DocsLink","props","name","text","rest","className","rel","target","memo","ProBadge","children","attributes","color"],"mappings":"yMAmEeA,G,gDAnEK,CAClBC,SAAU,wQAGVC,WAAY,0IACZC,IAAK,0wD,QC+CQC,UA9BK,WAClB,IAAMC,EAAWC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,YADpB,EAEMG,IAAMC,SAAST,EAAWG,KAFhC,mBAEjBO,EAFiB,KAERC,EAFQ,KAIlBC,EAAU,CACdC,aAAa,EACbC,KAAM,MACNC,MAAOV,EAAW,WAAa,UAC/BW,WAAW,EACXC,eAAgB,UAGlB,OACE,eAAC,IAAD,WACE,eAAC,IAAD,sCAC2B,IACzB,cAAC,IAAD,qCACA,cAAC,IAAD,CAAUC,KAAK,mDAEjB,cAAC,IAAD,UACE,cAAC,aAAD,CACEC,MAAOT,EACPE,QAASA,EACTQ,eAAgB,SAACC,EAAQC,EAAMH,GAAf,OAAyBR,EAAWQ,a,2JC1CxDI,EAAW,SAAAC,GAAU,IAEvBC,EAGED,EAHFC,KACAC,EAEEF,EAFFE,KACGC,EAJmB,YAKpBH,EALoB,iBAOlBN,EAAOO,EAAI,kDAA8CA,GAASD,EAAMN,KAE9E,OACE,qBAAKU,UAAU,sBAAf,SACE,cAAC,KAAD,2BACMD,GADN,IAEET,KAAMA,EACNW,IAAI,sBACJC,OAAO,SACPF,UAAU,qBALZ,SAOE,uBAAOA,UAAU,aAAjB,SAAgCF,GAAQ,eAMjClB,MAAMuB,KAAKR,GCvBpBS,EAAW,SAAAR,GAAU,IAAD,iBACeA,GAAjCS,EADkB,EAClBA,SAAaC,EADK,4BAExB,OACE,cAAC,IAAD,yBACEhB,KAAK,+BACLiB,MAAM,SACNL,OAAO,SACPD,IAAI,uBACAK,GALN,aAOGD,GAAsB,2BASdzB,MAAMuB,KAAKC","file":"static/js/72.25dba257.chunk.js","sourcesContent":["const sampleCode =  {\n  markdown: '### [CodeMirror](http://codemirror.net)\\n' +\n  'A versatile _text_ editor implemented in **JavaScript*** for the browser. \\n' +\n  'It is specialized for editing `code`, and comes with a number of language modes and addons that implement more advanced editing functionality.\\n',\n  javascript: 'var component = {\\n\\tname: \"react-codemirror2\",\\n\\tauthor: \"Salvatore Niro\",\\n\\trepo: \"https://github.com/scniro/react-codemirror2\"\\n};',\n  xml: '<!DOCTYPE html>\\n' +\n  '<html lang=\"en\">\\n' +\n  '<head>\\n' +\n  '\\n' +\n  '  <meta charset=\"utf-8\"/>\\n' +\n  '  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"/>\\n' +\n  '  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"/>\\n' +\n  '  <meta name=\"description\" content=\"\"/>\\n' +\n  '  <meta name=\"author\" content=\"Łukasz Holeczek\"/>\\n' +\n  '  <meta name=\"keyword\" content=\"\"/>\\n' +\n  '  <link rel=\"shortcut icon\" href=\"img/favicon.png\"/>\\n' +\n  '\\n' +\n  '  <title></title>\\n' +\n  '\\n' +\n  '  <!-- Icons -->\\n' +\n  '  <link href=\"node_modules/font-awesome/css/font-awesome.min.css\" rel=\"stylesheet\"/>\\n' +\n  '  <link href=\"node_modules/simple-line-icons/css/simple-line-icons.css\" rel=\"stylesheet\"/>\\n' +\n  '\\n' +\n  '  <!-- Main styles for this application -->\\n' +\n  '  <link href=\"css/style.css\" rel=\"stylesheet\"/>\\n' +\n  '\\n' +\n  '</head>\\n' +\n  '\\n' +\n  '\\n' +\n  '<body class=\"app header-fixed sidebar-fixed aside-menu-fixed aside-menu-hidden\">\\n' +\n  '  <header class=\"app-header navbar\">\\n' +\n  '  <h1>I ♥ react-codemirror2</h1>\\n' +\n  '  ...\\n' +\n  '</header>\\n' +\n  '  <div class=\"app-body\">\\n' +\n  '    <div class=\"sidebar\">\\n' +\n  '      ...\\n' +\n  '    </div>\\n' +\n  '    <!-- Main content -->\\n' +\n  '    <main class=\"main\">\\n' +\n  '\\n' +\n  '    </main>\\n' +\n  '    <aside class=\"aside-menu\">\\n' +\n  '      ...\\n' +\n  '    </aside>\\n' +\n  '  </div>\\n' +\n  '  <footer class=\"app-footer\">\\n' +\n  '    ...\\n' +\n  '  </footer>\\n' +\n  '\\n' +\n  '  <!-- Bootstrap and necessary plugins -->\\n' +\n  '  <script src=\"node_modules/jquery/dist/jquery.min.js\"></script>\\n' +\n  '  <script src=\"node_modules/popper.js/dist/umd/popper.min.js\"></script>\\n' +\n  '  <script src=\"node_modules/bootstrap/dist/js/bootstrap.min.js\"></script>\\n' +\n  '  <script src=\"node_modules/pace-progress/pace.min.js\"></script>\\n' +\n  '\\n' +\n  '  <!-- Plugins and scripts required by all views -->\\n' +\n  '  <script src=\"node_modules/chart.js/dist/Chart.min.js\"></script>\\n' +\n  '\\n' +\n  '  <!-- Main scripts -->\\n' +\n  '  <script src=\"js/app-config.js\"></script>\\n' +\n  '  <script src=\"js/app.js\"></script>\\n' +\n  '\\n' +\n  '</body>\\n' +\n  '</html>',\n};\n\nexport default sampleCode\n","import React from 'react'\nimport {\n  CCard,\n  CCardHeader,\n  CCardBody,\n} from '@coreui/react'\nimport { useSelector } from 'react-redux'\nimport { Controlled as CodeMirror } from 'react-codemirror2'\n\nimport { ProBadge, DocsLink } from 'src/reusable'\n\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/eclipse.css'\nimport 'codemirror/theme/twilight.css'\nimport 'codemirror/addon/scroll/simplescrollbars.css'\nimport 'codemirror/addon/scroll/simplescrollbars.js'\n// import 'codemirror/mode/markdown/markdown'\n// import 'codemirror/mode/javascript/javascript'\nimport 'codemirror/mode/xml/xml'\n\nimport sampleCode from './_examples'\n\nconst CodeEditors = () => {\n  const darkMode = useSelector(state => state.darkMode)\n  const [content, setContent] = React.useState(sampleCode.xml)\n\n  const options = {\n    lineNumbers: true,\n    mode: 'xml',\n    theme: darkMode ? 'twilight' : 'eclipse',\n    autofocus: true,\n    scrollbarStyle: 'simple'\n  }\n\n  return (\n    <CCard>\n      <CCardHeader>\n        Code Editor - CodeMirror{' '}\n        <ProBadge>CoreUI Pro integration</ProBadge>\n        <DocsLink href=\"https://github.com/scniro/react-codemirror2\"/>\n      </CCardHeader>\n      <CCardBody>\n        <CodeMirror\n          value={content}\n          options={options}\n          onBeforeChange={(editor, data, value) => setContent(value)}\n        />\n      </CCardBody>\n    </CCard>\n  )\n}\n\nexport default CodeEditors\n","import React from 'react'\nimport { CLink } from '@coreui/react'\n\nconst DocsLink = props => {\n  const {\n    name,\n    text,\n    ...rest\n  } = props\n\n  const href = name ? `https://coreui.io/react/docs/components/${name}` : props.href\n\n  return (\n    <div className=\"card-header-actions\">\n      <CLink \n        {...rest}\n        href={href}\n        rel=\"noreferrer noopener\" \n        target=\"_blank\" \n        className=\"card-header-action\"  \n      >\n        <small className=\"text-muted\">{ text || 'docs' }</small>\n      </CLink>\n    </div>\n  )\n}\n\nexport default React.memo(DocsLink)","import React from 'react'\nimport { CBadge } from '@coreui/react'\nimport PropTypes from 'prop-types'\n\nconst ProBadge = props => {\n  let { children, ...attributes } = { ...props }\n  return (\n    <CBadge\n      href=\"https://coreui.io/pro/react/\"\n      color=\"danger\"\n      target=\"_blank\"\n      rel=\"noreferrer noopener\"\n      {...attributes}\n    >\n      {children ? children : 'CoreUI Pro Component'}\n    </CBadge>\n  )\n}\n\nProBadge.propTypes = {\n  children: PropTypes.node\n}\n\nexport default React.memo(ProBadge)\n"],"sourceRoot":""}