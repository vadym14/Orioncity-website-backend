{"version":3,"sources":["views/google-maps/GoogleMaps.js","reusable/DocsLink.js","reusable/ProBadge.js"],"names":["defaultCenter","lat","lng","locations","label","draggable","title","www","MarkerList","map","location","index","MarkerWithInfoWindow","toString","React","useState","isOpen","setIsOpen","onClick","position","onCloseClick","href","target","GoogleMapsComponent","withScriptjs","withGoogleMap","defaultZoom","ReactGoogleMaps","googleMapURL","loadingElement","style","height","containerElement","mapElement","DocsLink","props","name","text","rest","className","rel","memo","ProBadge","children","attributes","color"],"mappings":"wMAqBMA,EAAgB,CAAEC,IAAK,UAAWC,KAAM,YACxCC,EAAY,CAChB,CACEF,IAAK,UACLC,KAAM,WACNE,MAAO,IACPC,WAAW,EACXC,MAAO,WACPC,IAAK,6BAEP,CACEN,IAAK,UACLC,KAAM,WACNE,MAAO,IACPC,WAAW,EACXC,MAAO,QACPC,IAAK,0BAEP,CACEN,IAAK,UACLC,KAAM,SACNE,MAAO,IACPC,WAAW,EACXC,MAAO,QACPC,IAAK,0BAEP,CACEN,IAAK,UACLC,KAAM,WACNE,MAAO,IACPC,WAAW,EACXC,MAAO,WACPC,IAAK,8BAIHC,EAAa,WACjB,OAAOL,EAAUM,KAAI,SAACC,EAAUC,GAC9B,OACE,cAACC,EAAD,CAA6CF,SAAUA,GAA5BC,EAAME,gBAKjCD,EAAuB,SAAC,GAAgB,IAAfF,EAAc,EAAdA,SAAc,EACfI,IAAMC,UAAS,GADA,mBACpCC,EADoC,KAC5BC,EAD4B,KAG3C,OACE,cAAC,SAAD,CACEC,QAAS,kBAAMD,GAAWD,IAC1BG,SAAUT,EACVJ,MAAOI,EAASJ,MAChBF,MAAOM,EAASN,MAJlB,SAMIY,GACA,cAAC,aAAD,CAAYI,aAAc,kBAAMH,GAAU,IAA1C,SACE,cAAC,KAAD,CAAUI,KAAMX,EAASH,IAAKe,OAAO,SAArC,SAA+CZ,EAASJ,aAO5DiB,EAAsBC,uBAAaC,yBAAc,WACnD,OACE,cAAC,YAAD,CAAWC,YAlEG,GAkEuB1B,cAAeA,EAApD,SACG,cAACQ,EAAD,CAAYL,UAAWA,UA2BjBwB,UArBS,WACtB,OACE,eAAC,IAAD,WACE,eAAC,IAAD,+BACoB,IAClB,cAAC,IAAD,IACA,cAAC,IAAD,CAAUN,KAAK,sDAEjB,cAAC,IAAD,UACE,cAACE,EAAD,CAEEK,aAAY,gGAtFP,2CAuFLC,eAAgB,qBAAKC,MAAO,CAACC,OAAO,UACpCC,iBAAkB,qBAAKF,MAAO,CAACC,OAAO,WACtCE,WAAY,qBAAKH,MAAO,CAACC,OAAO,WAJ5B,c,2JCpGRG,EAAW,SAAAC,GAAU,IAEvBC,EAGED,EAHFC,KACAC,EAEEF,EAFFE,KACGC,EAJmB,YAKpBH,EALoB,iBAOlBd,EAAOe,EAAI,kDAA8CA,GAASD,EAAMd,KAE9E,OACE,qBAAKkB,UAAU,sBAAf,SACE,cAAC,KAAD,2BACMD,GADN,IAEEjB,KAAMA,EACNmB,IAAI,sBACJlB,OAAO,SACPiB,UAAU,qBALZ,SAOE,uBAAOA,UAAU,aAAjB,SAAgCF,GAAQ,eAMjCvB,MAAM2B,KAAKP,GCvBpBQ,EAAW,SAAAP,GAAU,IAAD,iBACeA,GAAjCQ,EADkB,EAClBA,SAAaC,EADK,4BAExB,OACE,cAAC,IAAD,yBACEvB,KAAK,+BACLwB,MAAM,SACNvB,OAAO,SACPkB,IAAI,uBACAI,GALN,aAOGD,GAAsB,2BASd7B,MAAM2B,KAAKC","file":"static/js/73.c2e552f2.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  CCard,\n  CCardHeader,\n  CCardBody,\n  CNavLink\n} from '@coreui/react'\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n  InfoWindow\n} from 'react-google-maps'\nimport { ProBadge, DocsLink } from 'src/reusable'\n\n\n// To use the Google Maps JavaScript API, you must register your app project on the Google API Console and get a Google API key which you can add to your app\nconst apiKey = 'AIzaSyASyYRBZmULmrmw_P9kgr7_266OhFNinPA'\n\nconst defaultZoom = 11\nconst defaultCenter = { lat: 37.431489, lng: -122.163719 }\nconst locations = [\n  {\n    lat: 37.431489,\n    lng: -122.163719,\n    label: 'S',\n    draggable: false,\n    title: 'Stanford',\n    www: 'https://www.stanford.edu/'\n  },\n  {\n    lat: 37.394694,\n    lng: -122.150333,\n    label: 'T',\n    draggable: false,\n    title: 'Tesla',\n    www: 'https://www.tesla.com/'\n  },\n  {\n    lat: 37.331681,\n    lng: -122.030100,\n    label: 'A',\n    draggable: false,\n    title: 'Apple',\n    www: 'https://www.apple.com/'\n  },\n  {\n    lat: 37.484722,\n    lng: -122.148333,\n    label: 'F',\n    draggable: false,\n    title: 'Facebook',\n    www: 'https://www.facebook.com/'\n  }\n]\n\nconst MarkerList = () => {\n  return locations.map((location, index) => {\n    return (\n      <MarkerWithInfoWindow key={index.toString()} location={location}/>\n    )\n  })\n}\n\nconst MarkerWithInfoWindow = ({location}) => {\n  const [isOpen, setIsOpen] = React.useState(false)\n\n  return (\n    <Marker \n      onClick={() => setIsOpen(!isOpen)} \n      position={location} \n      title={location.title} \n      label={location.label}\n    >\n      { isOpen &&\n        <InfoWindow onCloseClick={() => setIsOpen(false)}>\n          <CNavLink href={location.www} target=\"_blank\">{location.title}</CNavLink>\n        </InfoWindow>\n      }\n    </Marker>\n  )\n}\n\nconst GoogleMapsComponent = withScriptjs(withGoogleMap(() => {\n    return (\n      <GoogleMap defaultZoom={defaultZoom} defaultCenter={defaultCenter}>\n        {<MarkerList locations={locations}/>}\n      </GoogleMap>\n    )\n  }\n))\n\nconst ReactGoogleMaps = () => {\n  return (\n    <CCard>\n      <CCardHeader>\n        React Google Maps{' '}\n        <ProBadge/>\n        <DocsLink href=\"https://github.com/tomchentw/react-google-maps\"/>\n      </CCardHeader>\n      <CCardBody>\n        <GoogleMapsComponent\n          key=\"map\"\n          googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${apiKey}`}\n          loadingElement={<div style={{height: `100%`}}/>}\n          containerElement={<div style={{height: `400px`}}/>}\n          mapElement={<div style={{height: `100%`}}/>}\n        />\n      </CCardBody>\n    </CCard>\n  )\n}\n\nexport default ReactGoogleMaps\n","import React from 'react'\nimport { CLink } from '@coreui/react'\n\nconst DocsLink = props => {\n  const {\n    name,\n    text,\n    ...rest\n  } = props\n\n  const href = name ? `https://coreui.io/react/docs/components/${name}` : props.href\n\n  return (\n    <div className=\"card-header-actions\">\n      <CLink \n        {...rest}\n        href={href}\n        rel=\"noreferrer noopener\" \n        target=\"_blank\" \n        className=\"card-header-action\"  \n      >\n        <small className=\"text-muted\">{ text || 'docs' }</small>\n      </CLink>\n    </div>\n  )\n}\n\nexport default React.memo(DocsLink)","import React from 'react'\nimport { CBadge } from '@coreui/react'\nimport PropTypes from 'prop-types'\n\nconst ProBadge = props => {\n  let { children, ...attributes } = { ...props }\n  return (\n    <CBadge\n      href=\"https://coreui.io/pro/react/\"\n      color=\"danger\"\n      target=\"_blank\"\n      rel=\"noreferrer noopener\"\n      {...attributes}\n    >\n      {children ? children : 'CoreUI Pro Component'}\n    </CBadge>\n  )\n}\n\nProBadge.propTypes = {\n  children: PropTypes.node\n}\n\nexport default React.memo(ProBadge)\n"],"sourceRoot":""}