{"version":3,"sources":["components/clients/common/Loading/index.jsx","common/index.js","components/clients/Dashboard/MyProjectContent/BasicInfo/index.jsx","components/clients/Dashboard/MyProjectContent/Units/index.jsx","components/clients/Dashboard/MyProjectContent/ProfitInfo/index.jsx","components/clients/Dashboard/MyProjectContent/index.jsx","containers/clients/Dashboard/MyProjectDetail/index.jsx"],"names":["LoadingContainer","props","className","color","style","width","height","numberWithCommas","x","toString","pattern","test","replace","BasicInfo","data","area","street","cashReqForLotPurchase","loanForLotPurchase","totalBildingCost","lotPurchaseLoanFinCost","constructionFinCost","softCost","additionalRequiredEquity","totalCashReqForProject","avgSalePricePerSqf","totalExpectedIncome","salesCommissionPercent","toFixed","profitPerProject","profitPerProjectPercent","constructorSharePercent","developerSharePercent","totalCashOnCash","netCashOnCash","projectPeriodMonth","annualReturn","Units","units","results","totalSize","totalCost","totalSales","totalSalePrice","i","length","item","size","cost","sale","salePrice","push","unit","renderRow","ProfitInfo","colSpan","rowSpan","MyProjectContent","id","useParams","dispatch","useDispatch","useSelector","state","projects","myProjectDetail","loading","useEffect","getDetailMyProjectApi","Loading","lg","md","name","MyProjectDetail"],"mappings":"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","file":"static/js/25.ba8fab6d.chunk.js","sourcesContent":["import React from \"react\";\nimport './index.scss'\n\nimport { CSpinner } from \"@coreui/react\";\n\nconst LoadingContainer = (props) => {\n  return (\n    <div className=\"loadingContainer\">\n      <CSpinner color=\"primary\" style={{ width: \"4rem\", height: \"4rem\" }} />\n    </div>\n  );\n};\n\nexport default LoadingContainer;\n","/* eslint-disable import/no-anonymous-default-export */\nexport const numberWithCommas = (x) => {\n  x = x.toString();\n  var pattern = /(-?\\d+)(\\d{3})/;\n  while (pattern.test(x)) x = x.replace(pattern, \"$1,$2\");\n  return x;\n};\n\nexport default {\n  numberWithCommas,\n};\n","import React from \"react\";\nimport \"./index.scss\";\nimport PropTypes from \"prop-types\";\nimport { numberWithCommas } from \"../../../../../common\";\n\nconst BasicInfo = ({ data }) => {\n  return (\n    <div className=\"basicInfo\">\n      <table>\n        <tbody>\n          <tr>\n            <td className=\"textBold\">Area</td>\n            <td className=\"textBold bgGrey\">{(data && data.area) || \"\"}</td>\n            <td></td>\n          </tr>\n          <tr>\n            <td className=\"textBold\">Street</td>\n            <td className=\"textBold bgGrey\">{(data && data.street) || \"\"}</td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>Cash Req For Lot Purchase</td>\n            <td className=\"bgGrey\">\n              ${(data && numberWithCommas(data.cashReqForLotPurchase)) || 0}\n            </td>\n            <td className=\"bgGrey\"></td>\n          </tr>\n          <tr>\n            <td>Loan For Lot Purchase</td>\n            <td className=\"bgGrey\">\n              ${(data && numberWithCommas(data.loanForLotPurchase)) || 0}\n            </td>\n            <td className=\"bgGrey\"></td>\n          </tr>\n          <tr>\n            <td>Total Lot/s Purchase Price</td>\n            <td className=\"bgGrey\"></td>\n            <td className=\"bgGrey textBold\">\n              $\n              {(data &&\n                numberWithCommas(\n                  data.loanForLotPurchase + data.cashReqForLotPurchase\n                )) ||\n                0}\n            </td>\n          </tr>\n\n          <tr className=\"m-10\">\n            <td>Total Building cost</td>\n            <td className=\"bgGrey\"></td>\n            <td className=\"bgGrey textBold\">\n              ${(data && numberWithCommas(data.totalBildingCost)) || 0}\n            </td>\n          </tr>\n\n          <tr>\n            <td>Lot Purchase Loan Fin Cost</td>\n            <td className=\"bgGrey\">\n              ${(data && numberWithCommas(data.lotPurchaseLoanFinCost)) || 0}\n            </td>\n            <td className=\"bgGrey\"></td>\n          </tr>\n          <tr>\n            <td>Construction Fin Cost</td>\n            <td className=\"bgGrey\">\n              ${(data && numberWithCommas(data.constructionFinCost)) || 0}\n            </td>\n            <td className=\"bgGrey\"></td>\n          </tr>\n          <tr>\n            <td>Total Fin cost</td>\n            <td className=\"bgGrey\"></td>\n            <td className=\"bgGrey textBold\">\n              $\n              {(data &&\n                numberWithCommas(\n                  data.constructionFinCost + data.lotPurchaseLoanFinCost\n                )) ||\n                0}\n            </td>\n          </tr>\n\n          <tr className=\"m-10\">\n            <td>Soft cost</td>\n            <td className=\"bgGrey\"></td>\n            <td className=\"bgGrey textBold\">${(data && numberWithCommas(data.softCost)) || 0}</td>\n          </tr>\n\n          <tr className=\"m-10\">\n            <td className=\"textBold\">Total cost</td>\n            <td className=\"bgGrey\"></td>\n            <td className=\"bgGrey textRed\">\n              $\n              {(data &&\n                numberWithCommas(data.loanForLotPurchase +\n                  data.cashReqForLotPurchase +\n                  data.totalBildingCost +\n                  data.constructionFinCost +\n                  data.lotPurchaseLoanFinCost +\n                  data.softCost)) ||\n                0}\n            </td>\n          </tr>\n\n          <tr>\n            <td className=\"textBold\">Additional required Equity</td>\n            <td className=\"bgGrey\">\n              ${(data && numberWithCommas(data.additionalRequiredEquity)) || 0}\n            </td>\n            <td className=\"bgGrey textRed\"></td>\n          </tr>\n          <tr>\n            <td className=\"textBold\">Total Cash Req For Project</td>\n            <td className=\"bgGrey textRed\">\n              ${(data && numberWithCommas(data.totalCashReqForProject)) || 0}\n            </td>\n            <td className=\"bgGrey\"></td>\n          </tr>\n\n          <tr className=\"m-10\">\n            <td className=\"textBold\">Avg sale Price per sqf</td>\n            <td className=\"bgGrey textBold\">\n              ${(data && numberWithCommas(data.avgSalePricePerSqf)) || 0}\n            </td>\n            <td className=\"bgGrey\"></td>\n          </tr>\n\n          <tr>\n            <td className=\"\">Total expected Income</td>\n            <td className=\"bgGrey\"></td>\n            <td className=\"bgGrey textRed\">\n              ${(data && numberWithCommas(data.totalExpectedIncome)) || 0}\n            </td>\n          </tr>\n          <tr>\n            <td className=\"\">\n              Sales Commission ({(data && numberWithCommas(data.salesCommissionPercent)) || 0}%)\n            </td>\n            <td className=\"bgGrey\"></td>\n            <td className=\"bgGrey \">\n              $\n              {data && data.salesCommissionPercent\n                ? numberWithCommas(((data.totalExpectedIncome * data.salesCommissionPercent) / 100).toFixed(0))\n                : 0}\n            </td>\n          </tr>\n          <tr>\n            <td className=\"\">Net Revenue</td>\n            <td className=\"bgGrey\"></td>\n            <td className=\"bgGrey textRed\">\n              $\n              {data &&\n                numberWithCommas((data.totalExpectedIncome -\n                  (data.totalExpectedIncome * data.salesCommissionPercent) /\n                    100).toFixed(0))}\n            </td>\n          </tr>\n\n          <tr className=\"mt-10\">\n            <td className=\"\">Profit per Project</td>\n            <td className=\"bgGrey\"></td>\n            <td className=\"bgGrey textRed\">\n              ${(data && numberWithCommas(data.profitPerProject)) || 0}\n            </td>\n          </tr>\n          <tr className=\"mb-10\">\n            <td className=\"\">Profit per Project %</td>\n            <td className=\"bgGrey\"></td>\n            <td className=\"bgGrey\">\n              {(data && data.profitPerProjectPercent) || 0}%\n            </td>\n          </tr>\n\n          <tr className=\"mt-10\">\n            <td className=\"\">\n              Constructor Share{\" \"}\n              <span className=\"percent\">\n                {(data && data.constructorSharePercent) || 0}%\n              </span>\n            </td>\n            <td className=\"bgGrey\"></td>\n            <td className=\"bgGrey textRed\">\n              $\n              {(data && numberWithCommas((data.profitPerProject * data.constructorSharePercent).toFixed(0))) ||\n                0}\n            </td>\n          </tr>\n          <tr className=\"mb-10\">\n            <td className=\"\">\n              Developer Share{\" \"}\n              <span className=\"percent\">\n                {(data && data.developerSharePercent) || 0}%\n              </span>\n            </td>\n            <td className=\"bgGrey\"></td>\n            <td className=\"bgGrey textRed\">\n              {(data && numberWithCommas((data.profitPerProject * data.developerSharePercent).toFixed(0))) ||\n                0}\n              %\n            </td>\n          </tr>\n\n          <tr className=\"mt-10\">\n            <td className=\"\">Total Cash on Cash</td>\n            <td className=\"bgGrey\">{data && data.totalCashOnCash}%</td>\n            <td className=\"bgGrey textRed\"></td>\n          </tr>\n          <tr className=\"\">\n            <td className=\"\">Net Cash on Cash (Investors Share)</td>\n            <td className=\"bgGrey tdBadget\">{data && data.netCashOnCash}%</td>\n            <td className=\"bgGrey textRed\"></td>\n          </tr>\n          <tr className=\"\">\n            <td className=\"\">Project Period (Month)</td>\n            <td className=\"bgGrey\">\n              {(data && data.projectPeriodMonth) || 0}%\n            </td>\n            <td className=\"bgGrey textRed\"></td>\n          </tr>\n          <tr className=\"\">\n            <td className=\"\">Anual Return</td>\n            <td className=\"bgGrey tdBadget\">\n              {(data && data.annualReturn) || 0}%\n            </td>\n            <td className=\"bgGrey textRed\"></td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nBasicInfo.propTypes = {\n  data: PropTypes.object,\n};\n\nexport default BasicInfo;\n","import React from \"react\";\nimport \"./index.scss\";\nimport PropTypes from \"prop-types\";\nimport { numberWithCommas } from \"../../../../../common\";\n\nconst Units = ({ units }) => {\n  const renderRow = () => {\n    const results = [];\n    let totalSize = 0;\n    let totalCost = 0;\n    let totalSales = 0;\n    let totalSalePrice = 0;\n    for (let i = 0; i < units.length; i++) {\n      const item = units[i];\n\n      totalSize += item.size;\n      totalCost += item.cost;\n      totalSales += item.sale;\n      totalSalePrice += item.salePrice;\n\n      results.push(\n        <tr key={i}>\n          <td>{numberWithCommas(item.unit) || \"\"}</td>\n          <td>{numberWithCommas(item.size) || 0}</td>\n          <td>{numberWithCommas(item.cost) || 0}</td>\n          <td>{numberWithCommas(item.sale) || 0}</td>\n          <td>{numberWithCommas(item.salePrice) || 0}</td>\n        </tr>\n      );\n    }\n\n    results.push(\n      <tr key={units.length} className=\"trTotal\">\n        <td>Total</td>\n        <td>{numberWithCommas(totalSize)}</td>\n        <td>{numberWithCommas(totalCost)}</td>\n        <td>{numberWithCommas(totalSales)}</td>\n        <td>{numberWithCommas(totalSalePrice)}</td>\n      </tr>\n    );\n\n    return results;\n  };\n  return (\n    <div className=\"units\">\n      <table>\n        <thead>\n          <tr>\n            <th>#Units</th>\n            <th>Size (sqf)</th>\n            <th>Cost $</th>\n            <th>Sales $</th>\n            <th>Sale Price</th>\n          </tr>\n        </thead>\n        <tbody>{renderRow()}</tbody>\n      </table>\n    </div>\n  );\n};\n\nUnits.propTypes = {\n  units: PropTypes.array.isRequired,\n};\n\nexport default Units;\n","import React from \"react\";\nimport \"./\bindex.scss\";\n\nconst ProfitInfo = (props) => {\n  return (\n    <div className=\"profitInfo\">\n      <table>\n        <thead>\n          <tr>\n            <th colSpan={2}></th>\n            <th colSpan={8} className=\"textCenter bgWhiteBlue\">\n              Profit in $m. Sensitivity\n            </th>\n          </tr>\n          <tr>\n            <th colSpan={3}></th>\n            <th colSpan={7} className=\"textCenter\">\n              Con. Cost Per Sqf\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td className='textBold' width={40} rowSpan={9}>\n              Avg. Sale Price Per Sqf\n            </td>\n            <td rowSpan={2} colSpan={2}></td>\n            <td className=\"textBold\">85%</td>\n            <td className=\"textBold\">90%</td>\n            <td className=\"textBold\">95%</td>\n            <td className=\"textBold\">100%</td>\n            <td className=\"textBold\">105%</td>\n            <td className=\"textBold\">110%</td>\n            <td className=\"textBold\">115%</td>\n          </tr>\n          <tr>\n            <td className=\"textBold bgDark\">$230</td>\n            <td className=\"textBold bgDark\">$243</td>\n            <td className=\"textBold bgDark\">$257</td>\n            <td className=\"textBold bgDark textRed\">$270</td>\n            <td className=\"textBold bgDark\">$284</td>\n            <td className=\"textBold bgDark\">$297</td>\n            <td className=\"textBold bgDark\">$311</td>\n          </tr>\n          <tr>\n            <td className=\"textBold\">85%</td>\n            <td className=\"textBold bgDark\">$680</td>\n            <td>$2.49</td>\n            <td>$2.36</td>\n            <td>$2.24</td>\n            <td>$2.11</td>\n            <td>$1.99</td>\n            <td>$1.86</td>\n            <td>$1.74</td>\n          </tr>\n          <tr>\n            <td className=\"textBold\">90%</td>\n            <td className=\"textBold bgDark\">$720</td>\n            <td>$2.82</td>\n            <td>$2.70</td>\n            <td>$2.58</td>\n            <td>$2.45</td>\n            <td>$2.33</td>\n            <td>$2.20</td>\n            <td>$2.08</td>\n          </tr>\n          <tr>\n            <td className=\"textBold\">95%</td>\n            <td className=\"textBold bgDark\">$760</td>\n            <td>$2.82</td>\n            <td>$2.70</td>\n            <td>$2.58</td>\n            <td>$2.45</td>\n            <td>$2.33</td>\n            <td>$2.20</td>\n            <td>$2.08</td>\n          </tr>\n          <tr>\n            <td className=\"textBold\">100%</td>\n            <td className=\"textBold bgDark textRed\">$760</td>\n            <td>$2.82</td>\n            <td>$2.70</td>\n            <td>$2.58</td>\n            <td>$2.45</td>\n            <td>$2.33</td>\n            <td>$2.20</td>\n            <td>$2.08</td>\n          </tr>\n          <tr>\n            <td className=\"textBold\">105%</td>\n            <td className=\"textBold bgDark\">$760</td>\n            <td>$2.82</td>\n            <td>$2.70</td>\n            <td>$2.58</td>\n            <td>$2.45</td>\n            <td>$2.33</td>\n            <td>$2.20</td>\n            <td>$2.08</td>\n          </tr>\n          <tr>\n            <td className=\"textBold\">110%</td>\n            <td className=\"textBold bgDark\">$760</td>\n            <td>$2.82</td>\n            <td>$2.70</td>\n            <td>$2.58</td>\n            <td>$2.45</td>\n            <td>$2.33</td>\n            <td>$2.20</td>\n            <td>$2.08</td>\n          </tr>\n          <tr>\n            <td className=\"textBold\">115%</td>\n            <td className=\"textBold bgDark\">$760</td>\n            <td>$2.82</td>\n            <td>$2.70</td>\n            <td>$2.58</td>\n            <td>$2.45</td>\n            <td>$2.33</td>\n            <td>$2.20</td>\n            <td>$2.08</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ProfitInfo;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from \"react\";\nimport \"./index.scss\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n// actions\nimport { getDetailMyProjectApi } from \"../../../../stores/reducers/projectSlice\";\n\n// ui\nimport { CRow, CCol, CContainer } from \"@coreui/react\";\n\n// components\nimport BasicInfo from \"./BasicInfo\";\nimport Units from \"./Units\";\nimport LoadingContainer from \"../../common/Loading\";\nimport ProfitInfo from './ProfitInfo';\n\nconst MyProjectContent = (props) => {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const { myProjectDetail, loading } = useSelector((state) => state.projects);\n\n  useEffect(() => {\n    if (!myProjectDetail) {\n      dispatch(getDetailMyProjectApi(id));\n    }\n  }, [dispatch, id]);\n\n  return (\n    <div className=\"myProjectContent\">\n      {loading ? (\n        <LoadingContainer />\n      ) : (\n        <CContainer>\n          <div className=\"content\">\n            <CRow>\n              <CCol lg={6} md={5}>\n                <div className=\"contentLeft\">\n                  <h1 className=\"title\">\n                    {(myProjectDetail && myProjectDetail.name) || \"\"}\n                  </h1>\n                </div>\n              </CCol>\n              <CCol lg={6} md={7}>\n                <Units\n                  units={(myProjectDetail && myProjectDetail.units) || []}\n                />\n              </CCol>\n            </CRow>\n\n            <CRow className=\"mt-40\">\n              <CCol lg={6} md={12}>\n                <BasicInfo data={myProjectDetail} />\n              </CCol>\n              <CCol lg={6} md={12}>\n                <ProfitInfo />\n                <ProfitInfo />\n                <ProfitInfo />\n              </CCol>\n            </CRow>\n          </div>\n        </CContainer>\n      )}\n    </div>\n  );\n};\n\nexport default MyProjectContent;\n","import React from \"react\";\nimport \"./index.scss\";\n\nimport MyProjectContent from \"../../../../components/clients/Dashboard/MyProjectContent\";\n\nconst MyProjectDetail = (props) => {\n  return <MyProjectContent />;\n};\n\nexport default MyProjectDetail;\n"],"sourceRoot":""}