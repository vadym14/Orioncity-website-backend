{"version":3,"sources":["components/clients/common/Loading/index.jsx","../node_modules/webpack/buildin/module.js","containers/clients/Register/index.jsx"],"names":["LoadingContainer","props","className","color","style","width","height","module","exports","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","get","l","i","ClientRegister","history","useHistory","dispatch","useDispatch","selector","useSelector","state","auth","useEffect","resetData","a","isCreated","user","toast","success","push","error","message","validationSchema","yup","email","required","password","min","rePassword","oneOf","formik","useFormik","initialValues","onSubmit","values","console","log","registerUserApi","loading","handleSubmit","method","to","htmlFor","type","name","autoComplete","onChange","handleChange","value","errors","touched","marginTop","classID"],"mappings":"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","file":"static/js/45.86c16e76.chunk.js","sourcesContent":["import React from \"react\";\nimport './index.scss'\n\nimport { CSpinner } from \"@coreui/react\";\n\nconst LoadingContainer = (props) => {\n  return (\n    <div className=\"loadingContainer\">\n      <CSpinner color=\"primary\" style={{ width: \"4rem\", height: \"4rem\" }} />\n    </div>\n  );\n};\n\nexport default LoadingContainer;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from \"react\";\nimport \"./index.scss\";\nimport * as yup from \"yup\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport { toast } from \"react-toastify\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { registerUserApi, resetData } from \"../../../stores/reducers/authSlice\";\n\nimport {\n  CContainer,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CInput,\n  CButton,\n  CFormText,\n} from \"@coreui/react\";\n\nimport LoadingContainer from \"../../../components/clients/common/Loading\";\n\nconst ClientRegister = (props) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const selector = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    return () => {\n      dispatch(resetData());\n    };\n  }, [dispatch]);\n\n  useEffect(async () => {\n    if (selector.isCreated === true && selector.user) {\n      await toast.success(\"Register account successfully!\");\n      await history.push(\"/login\");\n    } else if (selector.error) {\n      toast.error(selector.error.message);\n    }\n  }, [selector, history, dispatch]);\n\n  const validationSchema = yup.object({\n    email: yup\n      .string(\"Please enter your email.\")\n      .email(\"Invalid email format.\")\n      .required(\"Email is required\"),\n    password: yup\n      .string(\"Please enter your password\")\n      .min(6, \"Minimum 6 characters\")\n      .required(\"Password is required\"),\n    rePassword: yup\n      .string(\"Please enter confirm password\")\n      .required(\"Confirm password is required\")\n      .oneOf([yup.ref(\"password\")], \"Password is not match\"),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n      rePassword: \"\",\n    },\n    validationSchema,\n    onSubmit: (values) => {\n      console.log(\"values: \", values);\n      dispatch(registerUserApi(values));\n    },\n  });\n\n  return (\n    <div className=\"loginPage\">\n      {selector.loading ? (\n        <LoadingContainer />\n      ) : (\n        <CContainer>\n          <div className=\"content\">\n            <CForm onSubmit={formik.handleSubmit} method=\"post\">\n              <h1>Sign Up</h1>\n              <h4>\n                Already a member? <Link to=\"/login\">Log In</Link>\n              </h4>\n\n              <CFormGroup>\n                <CLabel htmlFor=\"nf-email\">Email</CLabel>\n                <CInput\n                  type=\"email\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  onChange={formik.handleChange}\n                  value={formik.values.email}\n                />\n\n                {formik.errors.email && formik.touched.email && (\n                  <CFormText className=\"help-block textError\">\n                    {formik.errors.email}\n                  </CFormText>\n                )}\n              </CFormGroup>\n\n              <CFormGroup>\n                <CLabel htmlFor=\"nf-email\">Password</CLabel>\n                <CInput\n                  type=\"password\"\n                  name=\"password\"\n                  onChange={formik.handleChange}\n                  value={formik.values.password}\n                />\n                {formik.errors.password && formik.touched.password && (\n                  <CFormText className=\"help-block textError\">\n                    {formik.errors.password}\n                  </CFormText>\n                )}\n              </CFormGroup>\n\n              <CFormGroup>\n                <CLabel htmlFor=\"nf-email\">Confirm Password</CLabel>\n                <CInput\n                  type=\"password\"\n                  name=\"rePassword\"\n                  onChange={formik.handleChange}\n                  value={formik.values.rePassword}\n                />\n                {formik.errors.rePassword && formik.touched.rePassword && (\n                  <CFormText className=\"help-block textError\">\n                    {formik.errors.rePassword}\n                  </CFormText>\n                )}\n              </CFormGroup>\n\n              <div className=\"actions\" style={{ marginTop: 30 }}>\n                <CButton type=\"submit\" color=\"primary\" classID=\"btnLogin\">\n                  Sign Up\n                </CButton>\n              </div>\n            </CForm>\n          </div>\n        </CContainer>\n      )}\n    </div>\n  );\n};\n\nexport default ClientRegister;\n"],"sourceRoot":""}