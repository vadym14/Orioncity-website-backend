{"version":3,"sources":["components/clients/common/Loading/index.jsx","components/clients/Dashboard/CardItem/index.jsx","components/clients/common/Chartjs/Apexcharts/index.jsx","components/clients/Dashboard/InfoChart/index.jsx","components/clients/Dashboard/index.jsx","containers/clients/Dashboard/index.jsx"],"names":["LoadingContainer","props","className","color","style","width","height","CardItem","id","image","title","investmentDate","investmentAmount","estimatedReturn","totalRoi","anualRoi","dispatch","useDispatch","history","useHistory","handleViewDetail","a","getDetailMyProjectApi","push","md","src","alt","onClick","moment","format","PieApexcharts","options","series","margin","type","InfoChart","total","refChart","useRef","useState","widthBox","setWidthBox","useEffect","current","_width","offsetWidth","myRef","setWidth","setHeight","handleResize","offsetHeight","window","addEventListener","removeEventListener","useResize","ref","numberWithCommas","x","toString","pattern","test","replace","DashboardContent","useSelector","state","projects","loading","myProjects","chartData","user","users","getProfileApi","getMyProjectsDashboardApi","role","localStorage","getItem","dataChart1","investmentDistribution","chart","colors","labels","chartLabels","plotOptions","pie","dataLabels","offset","formatter","val","opts","w","globals","seriesIndex","textAlign","fontSize","legend","show","responsive","breakpoint","position","dataChart2","expectedReturn","dropShadow","enabled","top","left","blur","opacity","Loading","results","i","length","item","_id","process","picture","key","name","renderItems","lg","investmentDistributionTotal","expectedReturnTotal","DashboardPage"],"mappings":"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","file":"static/js/24.9023d94e.chunk.js","sourcesContent":["import React from \"react\";\nimport './index.scss'\n\nimport { CSpinner } from \"@coreui/react\";\n\nconst LoadingContainer = (props) => {\n  return (\n    <div className=\"loadingContainer\">\n      <CSpinner color=\"primary\" style={{ width: \"4rem\", height: \"4rem\" }} />\n    </div>\n  );\n};\n\nexport default LoadingContainer;\n","import React from \"react\";\nimport \"./index.scss\";\nimport { useHistory } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\n\n// actions\nimport { getDetailMyProjectApi } from \"../../../../stores/reducers/projectSlice\";\n\n// ui\nimport { CRow, CCol } from \"@coreui/react\";\nimport moment from \"moment\";\n\nconst CardItem = ({\n  id,\n  image,\n  title,\n  investmentDate,\n  investmentAmount,\n  estimatedReturn,\n  totalRoi,\n  anualRoi,\n}) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleViewDetail = async () => {\n    await dispatch(getDetailMyProjectApi(id));\n    await history.push(`/dashboard/my-projects/${id}`);\n  };\n\n  return (\n    <div className=\"cardItem\">\n      <CRow>\n        <CCol md={6}>\n          <img\n            src={image}\n            alt=\"\"\n            style={{ width: \"100%\" }}\n            onClick={handleViewDetail}\n          />\n        </CCol>\n        <CCol md={6}>\n          <div className=\"title\">\n            <h3 onClick={handleViewDetail}>{title}</h3>\n          </div>\n        </CCol>\n      </CRow>\n\n      <div className=\"description\">\n        <p className=\"textLeft\">Investment date:</p>\n        <p className=\"textRight\">\n          {moment(investmentDate).format(\"MMM DD YYYY\")}\n        </p>\n      </div>\n\n      <div className=\"description\">\n        <p className=\"textLeft\">Investment Amount:</p>\n        <p className=\"textRight\">$ {investmentAmount}</p>\n      </div>\n\n      <div className=\"description\">\n        <p className=\"textLeft\">Estimated Return:</p>\n        <p className=\"textRight\">$ {estimatedReturn}</p>\n      </div>\n\n      <div className=\"description\">\n        <p className=\"textLeft\">Estimated Total ROI:</p>\n        <p className=\"textRight\">{totalRoi}%</p>\n      </div>\n\n      <div className=\"description\">\n        <p className=\"textLeft\">Estimated Anual ROI:</p>\n        <p className=\"textRight\">{anualRoi}%</p>\n      </div>\n    </div>\n  );\n};\n\nCardItem.propTypes = {\n  image: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  anualRoi: PropTypes.number,\n  totalRoi: PropTypes.number,\n  investmentAmount: PropTypes.number,\n};\n\nexport default CardItem;\n","import React from \"react\";\nimport \"./index.scss\";\n\nimport ReactApexChart from \"react-apexcharts\";\n\nconst PieApexcharts = ({ options, series, width }) => {\n  return (\n    <div id=\"chart\" style={{ margin: \"15px 0\" }}>\n      <ReactApexChart\n        options={options}\n        series={series}\n        type=\"pie\"\n        width={width}\n      />\n    </div>\n  );\n};\n\nexport default PieApexcharts;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport \"./index.scss\";\nimport PropTypes from \"prop-types\";\n\nimport PieApexcharts from \"../../common/Chartjs/Apexcharts\";\n\nconst useResize = (myRef) => {\n  const [width, setWidth] = useState(0);\n  const [height, setHeight] = useState(0);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWidth(myRef.current.offsetWidth);\n      setHeight(myRef.current.offsetHeight);\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, [myRef]);\n\n  return { width, height };\n};\n\nconst InfoChart = ({ title, total, options, series }) => {\n  const refChart = useRef(null);\n\n  const [widthBox, setWidthBox] = useState(0);\n\n  useEffect(() => {\n    if (refChart.current) {\n      const _width = refChart.current.offsetWidth;\n      setWidthBox(_width);\n    }\n  }, [refChart]);\n\n  const { width } = useResize(refChart);\n\n  return (\n    <div className=\"infoChart\">\n      <h2>{title}</h2>\n\n      <div className=\"viewChart\" ref={refChart}>\n        {widthBox && (\n          <PieApexcharts\n            title={title}\n            width={width === 0 ? widthBox : width}\n            options={options}\n            series={series}\n          />\n        )}\n      </div>\n\n      <h4>Total: {total}</h4>\n    </div>\n  );\n};\n\nInfoChart.propTypes = {\n  title: PropTypes.string,\n  total: PropTypes.string,\n};\n\nexport default InfoChart;\n","import React, { useEffect } from \"react\";\nimport \"./index.scss\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n// actions\nimport { getMyProjectsDashboardApi } from \"../../../stores/reducers/projectSlice\";\nimport { getProfileApi } from \"../../../stores/reducers/userSlice\";\n\n// ui\nimport { CContainer, CRow, CCol } from \"@coreui/react\";\n\n// components\nimport CardItem from \"./CardItem\";\nimport InfoChart from \"./InfoChart\";\nimport LoadingContainer from \"../common/Loading\";\n\nconst numberWithCommas = (x) => {\n  x = x.toString();\n  var pattern = /(-?\\d+)(\\d{3})/;\n  while (pattern.test(x)) x = x.replace(pattern, \"$1,$2\");\n  return x;\n};\n\nconst DashboardContent = (props) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { loading, myProjects, chartData } = useSelector(\n    (state) => state.projects\n  );\n  const { user } = useSelector((state) => state.users);\n\n  useEffect(() => {\n    dispatch(getProfileApi());\n    dispatch(getMyProjectsDashboardApi());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (user && user.role && user.role === \"admin\") {\n      history.push(\"/admin\");\n    }\n  }, [user, history]);\n\n  useEffect(() => {\n    const checkLogin = localStorage.getItem(\"isLogin\");\n    if (!checkLogin) {\n      history.push(\"/login\");\n    }\n  }, [history]);\n\n  const dataChart1 = {\n    series: chartData && chartData.investmentDistribution,\n    options: {\n      chart: {\n        // width: props.width,\n        type: \"pie\",\n      },\n      colors: [\"#f17522\", \"#9c9c9c\", \"#f7c028\", \"#15a5e7\"],\n      labels: chartData && chartData.chartLabels,\n      plotOptions: {\n        pie: {\n          dataLabels: {\n            offset: -22,\n          },\n        },\n      },\n      dataLabels: {\n        formatter(val, opts) {\n          const name = opts.w.globals.labels[opts.seriesIndex];\n          const value = `$${numberWithCommas(\n            dataChart1.series[opts.seriesIndex]\n          )}`;\n          return [name, value];\n        },\n        style: {\n          textAlign: \"center\",\n          fontSize: \"13px\",\n        },\n      },\n      legend: {\n        show: false,\n      },\n      responsive: [\n        {\n          breakpoint: 480,\n          options: {\n            legend: {\n              position: \"center\",\n            },\n          },\n        },\n      ],\n    },\n  };\n\n  const dataChart2 = {\n    series: chartData && chartData.expectedReturn,\n    options: {\n      chart: {\n        // width: props.width,\n        type: \"pie\",\n      },\n      colors: [\"#f17522\", \"#9c9c9c\", \"#f7c028\", \"#15a5e7\"],\n      labels: chartData && chartData.chartLabels,\n      plotOptions: {\n        pie: {\n          dataLabels: {\n            offset: -22,\n          },\n        },\n      },\n      dropShadow: {\n        enabled: true,\n        top: 0,\n        left: 0,\n        blur: 3,\n        opacity: 0.5,\n      },\n      dataLabels: {\n        formatter(val, opts) {\n          const name = opts.w.globals.labels[opts.seriesIndex];\n          const value = `$${numberWithCommas(\n            dataChart2.series[opts.seriesIndex]\n          )}`;\n          return [name, value];\n        },\n        style: {\n          textAlign: \"center\",\n          fontSize: \"13px\",\n        },\n      },\n      legend: {\n        show: false,\n      },\n      responsive: [\n        {\n          breakpoint: 480,\n          options: {\n            legend: {\n              position: \"center\",\n            },\n          },\n        },\n      ],\n    },\n  };\n\n  const renderItems = () => {\n    const results = [];\n\n    for (let i = 0; i < myProjects.length; i++) {\n      const item = myProjects[i];\n      results.push(\n        <CCol md={6} key={i}>\n          <CardItem\n            id={item._id}\n            image={`${process.env.REACT_APP_CLOUD_FRONT_URI}${\n              item.picture && item.picture.key\n            }`}\n            title={item.name}\n            investmentDate={item.investmentDate}\n            investmentAmount={item.investmentAmount}\n            estimatedReturn={item.estimatedReturn}\n            totalRoi={item.totalRoi}\n            anualRoi={item.anualRoi}\n          />\n        </CCol>\n      );\n    }\n\n    return results;\n  };\n\n  return (\n    <div className=\"dashboardContent\">\n      {loading ? (\n        <LoadingContainer />\n      ) : (\n        <CContainer>\n          <h2>Personal Investments</h2>\n\n          <CRow>{renderItems()}</CRow>\n\n          <CRow>\n            <CCol lg={6}>\n              <InfoChart\n                title=\"Investment Distribution\"\n                total={`$${\n                  (chartData &&\n                    numberWithCommas(chartData.investmentDistributionTotal)) ||\n                  0\n                }`}\n                options={dataChart1.options}\n                series={dataChart1.series}\n              />\n            </CCol>\n            <CCol lg={6}>\n              <InfoChart\n                title=\"Expected Return\"\n                total={`$${\n                  (chartData &&\n                    numberWithCommas(chartData.expectedReturnTotal)) ||\n                  0\n                }`}\n                options={dataChart2.options}\n                series={dataChart2.series}\n              />\n            </CCol>\n          </CRow>\n        </CContainer>\n      )}\n    </div>\n  );\n};\n\nexport default DashboardContent;\n","import React from \"react\";\nimport \"./index.scss\";\n\nimport DashboardContent from \"../../../components/clients/Dashboard\";\n\nconst DashboardPage = (props) => {\n  return (\n    <div className=\"dashboadClient\">\n      <DashboardContent />\n    </div>\n  );\n};\n\nexport default DashboardPage;\n"],"sourceRoot":""}