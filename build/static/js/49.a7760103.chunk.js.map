{"version":3,"sources":["views/plugins/draggable/_layouts.js","views/plugins/draggable/Draggable.js","reusable/DocsLink.js","reusable/ProBadge.js"],"names":["layoutMd","i","x","y","w","h","static","layouts","xl","lg","md","sm","xs","breakPoints","parseInt","getStyle","ResponsiveGridLayout","WidthProvider","Responsive","Draggable","useState","JSON","parse","localStorage","getItem","stringify","defaultLayouts","setLayouts","loremIpsum","className","onLayoutChange","layout","setItem","breakpoints","cols","isResizable","measureBeforeMount","draggableHandle","accentColor","color","size","onClick","name","href","DocsLink","props","text","rest","rel","target","React","memo","ProBadge","children","attributes"],"mappings":"yMAiBMA,G,wBAAW,CACf,CAACC,EAAG,IAAKC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,QAAQ,GACzC,CAACL,EAAG,IAAKC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAC9B,CAACJ,EAAG,IAAKC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAC9B,CAACJ,EAAG,IAAKC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAC9B,CAACJ,EAAG,IAAKC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAC9B,CAACJ,EAAG,IAAKC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,KAajBE,EAFC,CAAEC,GAjCD,CACf,CAACP,EAAG,IAAKC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,QAAQ,GACzC,CAACL,EAAG,IAAKC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAC9B,CAACJ,EAAG,IAAKC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAC9B,CAACJ,EAAG,IAAKC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAC9B,CAACJ,EAAG,IAAKC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAC9B,CAACJ,EAAG,IAAKC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,IA2BAI,GAzBf,CACf,CAACR,EAAG,IAAKC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,QAAQ,GACzC,CAACL,EAAG,IAAKC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAC9B,CAACJ,EAAG,IAAKC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAC9B,CAACJ,EAAG,IAAKC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAC9B,CAACJ,EAAG,IAAKC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAC9B,CAACJ,EAAG,IAAKC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,IAmBcK,GAAIV,EAAUW,GAAIX,EAAUY,GATzD,CACf,CAACX,EAAG,IAAKC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,QAAQ,GACzC,CAACL,EAAG,IAAKC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAC9B,CAACJ,EAAG,IAAKC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAC9B,CAACJ,EAAG,IAAKC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAC9B,CAACJ,EAAG,IAAKC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAC9B,CAACJ,EAAG,IAAKC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,K,QCf1BQ,EAAc,GACpBA,EAAYL,GAAKM,SAASC,mBAAS,mBAAoB,IACvDF,EAAYJ,GAAKK,SAASC,mBAAS,mBAAoB,IACvDF,EAAYH,GAAKI,SAASC,mBAAS,mBAAoB,IACvDF,EAAYF,GAAKG,SAASC,mBAAS,mBAAoB,IACvDF,EAAYD,GAAKE,SAASC,mBAAS,mBAAoB,IAEvD,IAAMC,EAAuBC,wBAAcC,cAwG5BC,UAtGG,WAAO,IAAD,EACQC,mBAC5BC,KAAKC,MAAMC,aAAaC,QAAQ,mCAChCH,KAAKI,UAAUC,KAHK,mBACfnB,EADe,KACNoB,EADM,KAehBC,EAAa,mRAEnB,OACE,eAACZ,EAAD,CACEa,UAAU,SACVtB,QAASA,EACTuB,eAAgB,SAACC,EAAQxB,GAAT,OAXG,SAACwB,EAAQxB,GAC9BgB,aAAaS,QAAQ,iCAAkCX,KAAKI,UAAUlB,IACtEoB,EAAWpB,GAS4BuB,CAAeC,EAAQxB,IAC5D0B,YAAapB,EACbqB,KAAM,CAAC1B,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACvCuB,aAAa,EACbC,oBAAoB,EACpBC,gBAAiB,eARnB,UAUE,eAAC,IAAD,CAEEC,YAAY,UAFd,UAIE,eAAC,IAAD,yBAEE,qBAAKT,UAAU,sBAAf,SACE,cAAC,IAAD,CACEU,MAAM,OACNC,KAAK,KACLX,UAAU,qBACVY,QAjCQ,WAClBd,EAAWN,KAAKC,MAAMD,KAAKI,UAAUC,MA4B7B,+BAQJ,cAAC,IAAD,UACGE,MAfC,KAkBN,eAAC,IAAD,CAGEU,YAAY,YAHd,UAKE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOI,KAAK,oBADd,uBAGE,cAAC,IAAD,IACA,cAAC,IAAD,CAAUC,KAAK,kDAEjB,cAAC,IAAD,UACGf,MAVC,KAaN,eAAC,IAAD,CAAeU,YAAY,UAA3B,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOI,KAAK,oBADd,sBAIA,cAAC,IAAD,UACGd,MANM,KASX,eAAC,IAAD,CAAeU,YAAY,OAA3B,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOI,KAAK,oBADd,sBAIA,cAAC,IAAD,UACGd,MANM,KASX,eAAC,IAAD,CAAeU,YAAY,UAA3B,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOI,KAAK,oBADd,sBAIA,cAAC,IAAD,UACGd,MANM,KASX,eAAC,IAAD,CAAeU,YAAY,SAA3B,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOI,KAAK,oBADd,sBAIA,cAAC,IAAD,UACGd,MANM,U,kLC/GXgB,EAAW,SAAAC,GAAU,IAEvBH,EAGEG,EAHFH,KACAI,EAEED,EAFFC,KACGC,EAJmB,YAKpBF,EALoB,iBAOlBF,EAAOD,EAAI,kDAA8CA,GAASG,EAAMF,KAE9E,OACE,qBAAKd,UAAU,sBAAf,SACE,cAAC,KAAD,2BACMkB,GADN,IAEEJ,KAAMA,EACNK,IAAI,sBACJC,OAAO,SACPpB,UAAU,qBALZ,SAOE,uBAAOA,UAAU,aAAjB,SAAgCiB,GAAQ,eAMjCI,MAAMC,KAAKP,GCvBpBQ,EAAW,SAAAP,GAAU,IAAD,iBACeA,GAAjCQ,EADkB,EAClBA,SAAaC,EADK,4BAExB,OACE,cAAC,IAAD,yBACEX,KAAK,+BACLJ,MAAM,SACNU,OAAO,SACPD,IAAI,uBACAM,GALN,aAOGD,GAAsB,2BASdH,MAAMC,KAAKC","file":"static/js/49.a7760103.chunk.js","sourcesContent":["// layout is an array of objects\nconst layoutXl = [\n  {i: 'a', x: 0, y: 0, w: 1, h: 2, static: true},\n  {i: 'b', x: 1, y: 0, w: 1, h: 2},\n  {i: 'c', x: 2, y: 0, w: 1, h: 2},\n  {i: 'd', x: 0, y: 1, w: 1, h: 2},\n  {i: 'e', x: 1, y: 1, w: 1, h: 2},\n  {i: 'f', x: 2, y: 1, w: 1, h: 2}\n];\nconst layoutLg = [\n  {i: 'a', x: 0, y: 0, w: 1, h: 2, static: true},\n  {i: 'b', x: 1, y: 0, w: 1, h: 2},\n  {i: 'c', x: 2, y: 0, w: 1, h: 2},\n  {i: 'd', x: 0, y: 1, w: 1, h: 2},\n  {i: 'e', x: 1, y: 1, w: 1, h: 2},\n  {i: 'f', x: 2, y: 1, w: 1, h: 2}\n];\nconst layoutMd = [\n  {i: 'a', x: 0, y: 0, w: 1, h: 2, static: true},\n  {i: 'b', x: 1, y: 0, w: 1, h: 2},\n  {i: 'c', x: 0, y: 1, w: 1, h: 2},\n  {i: 'd', x: 1, y: 1, w: 1, h: 2},\n  {i: 'e', x: 0, y: 2, w: 1, h: 2},\n  {i: 'f', x: 1, y: 2, w: 1, h: 2}\n];\nconst layoutSm = [\n  {i: 'a', x: 0, y: 0, w: 1, h: 2, static: true},\n  {i: 'b', x: 0, y: 1, w: 1, h: 2},\n  {i: 'c', x: 0, y: 2, w: 1, h: 2},\n  {i: 'd', x: 0, y: 3, w: 1, h: 2},\n  {i: 'e', x: 0, y: 4, w: 1, h: 2},\n  {i: 'f', x: 0, y: 5, w: 1, h: 2}\n];\n\nconst layouts = { xl: layoutXl, lg: layoutLg, md: layoutMd, sm: layoutMd, xs: layoutSm };\n\nexport default layouts;\n","import React, { useState } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader\n} from '@coreui/react'\nimport { ProBadge, DocsLink } from 'src/reusable'\nimport CIcon from '@coreui/icons-react'\nimport { Responsive, WidthProvider } from 'react-grid-layout'\nimport { getStyle } from '@coreui/utils'\nimport 'react-grid-layout/css/styles.css'\nimport 'react-resizable/css/styles.css'\nimport './Draggable.css'\nimport defaultLayouts from './_layouts'\n\nconst breakPoints = {}\nbreakPoints.xl = parseInt(getStyle('--breakpoint-xl'), 10)\nbreakPoints.lg = parseInt(getStyle('--breakpoint-lg'), 10)\nbreakPoints.md = parseInt(getStyle('--breakpoint-md'), 10)\nbreakPoints.sm = parseInt(getStyle('--breakpoint-sm'), 10)\nbreakPoints.xs = parseInt(getStyle('--breakpoint-xs'), 10)\n\nconst ResponsiveGridLayout = WidthProvider(Responsive);\n\nconst Draggable = () => {\n  const [layouts, setLayouts] = useState(\n    JSON.parse(localStorage.getItem('CoreUI-React-Draggable-Layouts') || \n    JSON.stringify(defaultLayouts))\n  )\n\n  const resetLayout = () => {\n    setLayouts(JSON.parse(JSON.stringify(defaultLayouts)))\n  }\n\n  const onLayoutChange = (layout, layouts) => {\n    localStorage.setItem('CoreUI-React-Draggable-Layouts', JSON.stringify(layouts))\n    setLayouts(layouts)\n  }\n\n  const loremIpsum = 'Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.'\n\n  return (\n    <ResponsiveGridLayout \n      className=\"layout\" \n      layouts={layouts}\n      onLayoutChange={(layout, layouts) => onLayoutChange(layout, layouts)}\n      breakpoints={breakPoints}\n      cols={{xl: 3, lg: 3, md: 3, sm: 2, xs: 1}}\n      isResizable={false}\n      measureBeforeMount={false}\n      draggableHandle={\".card-header\"}\n    >\n      <CCard\n        key=\"a\"\n        accentColor=\"primary\"\n      >\n        <CCardHeader>\n          Static Card\n          <div className=\"card-header-actions\">\n            <CButton \n              color=\"link\" \n              size=\"sm\" \n              className=\"card-header-action\" \n              onClick={resetLayout}\n            >Reset Layout</CButton>\n          </div>\n        </CCardHeader>\n        <CCardBody>\n          {loremIpsum}\n        </CCardBody>\n      </CCard>\n      <CCard\n        \n        key=\"b\"\n        accentColor=\"secondary\"\n      >\n        <CCardHeader>\n          <CIcon name=\"cil-cursor-move\"></CIcon>\n          Drag & Drop Card&nbsp;\n          <ProBadge/>\n          <DocsLink href=\"https://github.com/STRML/react-grid-layout\"/>\n        </CCardHeader>\n        <CCardBody>\n          {loremIpsum}\n        </CCardBody>\n      </CCard>\n      <CCard key=\"c\" accentColor=\"success\">\n        <CCardHeader>\n          <CIcon name=\"cil-cursor-move\"></CIcon>\n          Drag & Drop Card \n        </CCardHeader>\n        <CCardBody>\n          {loremIpsum}\n        </CCardBody>\n      </CCard>\n      <CCard key=\"d\" accentColor=\"info\">\n        <CCardHeader>\n          <CIcon name=\"cil-cursor-move\"></CIcon>\n          Drag & Drop Card \n        </CCardHeader>\n        <CCardBody>\n          {loremIpsum}\n        </CCardBody>\n      </CCard>\n      <CCard key=\"e\" accentColor=\"warning\">\n        <CCardHeader>\n          <CIcon name=\"cil-cursor-move\"></CIcon>\n          Drag & Drop Card \n        </CCardHeader>\n        <CCardBody>\n          {loremIpsum}\n        </CCardBody>\n      </CCard>\n      <CCard key=\"f\" accentColor=\"danger\">\n        <CCardHeader>\n          <CIcon name=\"cil-cursor-move\"></CIcon>\n          Drag & Drop Card \n        </CCardHeader>\n        <CCardBody>\n          {loremIpsum}\n        </CCardBody>\n      </CCard>\n    </ResponsiveGridLayout>\n  )\n}\n\nexport default Draggable\n","import React from 'react'\nimport { CLink } from '@coreui/react'\n\nconst DocsLink = props => {\n  const {\n    name,\n    text,\n    ...rest\n  } = props\n\n  const href = name ? `https://coreui.io/react/docs/components/${name}` : props.href\n\n  return (\n    <div className=\"card-header-actions\">\n      <CLink \n        {...rest}\n        href={href}\n        rel=\"noreferrer noopener\" \n        target=\"_blank\" \n        className=\"card-header-action\"  \n      >\n        <small className=\"text-muted\">{ text || 'docs' }</small>\n      </CLink>\n    </div>\n  )\n}\n\nexport default React.memo(DocsLink)","import React from 'react'\nimport { CBadge } from '@coreui/react'\nimport PropTypes from 'prop-types'\n\nconst ProBadge = props => {\n  let { children, ...attributes } = { ...props }\n  return (\n    <CBadge\n      href=\"https://coreui.io/pro/react/\"\n      color=\"danger\"\n      target=\"_blank\"\n      rel=\"noreferrer noopener\"\n      {...attributes}\n    >\n      {children ? children : 'CoreUI Pro Component'}\n    </CBadge>\n  )\n}\n\nProBadge.propTypes = {\n  children: PropTypes.node\n}\n\nexport default React.memo(ProBadge)\n"],"sourceRoot":""}